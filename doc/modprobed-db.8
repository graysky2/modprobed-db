.\" Text automatically generated by txt2man
.TH modprobed-db 1 "23 November 2018" "" ""
.SH NAME
\fBModprobed-db \fP- Store and recall every module probed on the system at will.
\fB
.SH SYNOPSIS
.nf
.fam C
\fBmodprobed-db\fP [\fIoptions\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Modprobed-db is a useful utility for users wishing to build a minimal kernel via a "make localmodconfig." In a nutshell, "make localmodconfig" takes every module currently loaded and adjusts the kernel's .config file to enable the corresponding selections for each one thus hardcoding them into the target kernel. This results in a system-specific, smaller kernel package and footprint as well as reduced compilation times.
.PP
Modprobed-db simply logs every module ever probed on the target system to a text-based database ($XDG_CONFIG_HOME/\fBmodprobed-db\fP) and can recall them, that is modprobe them all, to provide substrate for the "make localmodconfig" described above.
.PP
Be sure to see the TIPS section!
.SH OPTIONS
.TP
.B
list
Display to stdout the contents of the user database defined in $XDG_CONFIG_HOME/modprobed-db.conf.
.TP
.B
store
Take a snapshot of currently loaded modules and log them to the database file.  Note that this operation collects a cumulative list of all modules probed and only logs ones that \fBmodprobed-db\fP has not seen before.
.TP
.B
recall
Call modprobe for every module contained in the database.
.TP
.B
debug
Print the difference between currently loaded modules (/proc/modules) and the user database.
.SH QUICK SETUP
.IP 1. 4
Edit $XDG_CONFIG_HOME/modprobed-db.conf to define modules to ignore in the IGNORE array. For example, modules that are not a provided by the Linux kernel package and are provided by an external package. The examples provided are a few suggestions specific to Arch Linux.
.IP 2. 4
Optionally edit $XDG_CONFIG_HOME/modprobed-db.conf to define your terminal color scheme and the path to the database.
.IP 3. 4
Optionally automate calling the script to run at some regular interval.
.PP
Cron users can add an entry their respective crontab:
.PP
.nf
.fam C
        For example, once every hour:
        0 */1 * * *     /usr/bin/modprobed-db store &> /dev/null

.fam T
.fi
Users of systemd may use the included user service that will run \fBmodprobed-db\fP in store mode once per hour, at boot, and on shutdown. Invoke it like so:
.PP
.nf
.fam C
        systemctl --user enable modprobed-db
        systemctl --user start modprobed-db

.fam T
.fi
Status of the service and of the timer can be queried like so:
.PP
.nf
.fam C
        systemctl --user status modprobed-db
        systemctl --user list-timers

.fam T
.fi
.SH TIPS
.IP \(bu 3
It should be noted that one need not run the recall function of \fBmodprobed-db\fP to achieve the result. Setting the LSMOD variable when making the localmodconfi target does this without the need to have the modules in the database loaded:
.PP
.nf
.fam C
  make LSMOD=$HOME/.config/modprobed.db localmodconfig
.fam T
.fi
.IP \(bu 3
As upstream kernel code changes, new modules become available or are removed. It is recommended to boot into a distro default kernel and invoke \fBmodprobed-db\fP in store mode to capture any new modules that have become available on new major kernel releases.
.IP \(bu 3
When \fBmodprobed-db\fP is run in recall mode, modprobe may throw an error like, "modprobe: WARNING: Module cpufreq_stats not found in directory /lib/modules/4.8.1-1-ARCH." Users can safely edit the database ($XDG_CONFIG_HOME/\fBmodprobed-db\fP) to remove the offending module or modules to avoid the warning in future calls to the recall mode.
.SH SEE ALSO
\fBmodprobe\fP(8)
.SH BUGS
No known bugs.
.SH AUTHOR
graysky (graysky AT archlinux DOT us)
